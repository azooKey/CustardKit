import Foundation
import CustardKit

func makeKey(main: String, sub: [String]?) -> CustardInterfaceKey {
    if let sub = sub{
        return .custom(
            .init(
                design: .init(label: .text(main), color: .normal),
                press_actions: [.input(main)],
                longpress_actions: .none,
                variations: [
                    .init(type: .flick_variation(.left), key: .init(design: .init(label: .text(sub[0])), press_actions: [.input(sub[0])], longpress_actions: .none)),
                    .init(type: .flick_variation(.top), key: .init(design: .init(label: .text(sub[1])), press_actions: [.input(sub[1])], longpress_actions: .none)),
                    .init(type: .flick_variation(.right), key: .init(design: .init(label: .text(sub[2])), press_actions: [.input(sub[2])], longpress_actions: .none)),
                    .init(type: .flick_variation(.bottom), key: .init(design: .init(label: .text(sub[3])), press_actions: [.input(sub[3])], longpress_actions: .none))
                ])
        )}
    else{
        return .custom(
            .init(
                design: .init(label: .text(main), color: .normal),
                press_actions: [.input(main)],
                longpress_actions: .none,
                variations: [])
        )
    }
}

let md_custard = Custard(
    custard_version: .v1_0,
    identifier: "md_keyboard_jp",
    display_name: "Êó•Êú¨Ë™ûmarkdown„Ç≠„Éº„Éú„Éº„Éâ",
    language: .ja_JP,
    input_style: .direct,
    interface: .init(
        key_style: .tenkeyStyle,
        key_layout: .gridFit(.init(rowCount: 6, columnCount: 4)),
        keys: [
            .gridFit(.init(x: 0, y: 0)): .custom(
                .init(
                    design: .init(label: .text("123"), color: .special),
                    press_actions: [.moveTab(.system(.flick_numbersymbols))],
                    longpress_actions: .init(start: [.toggleTabBar]),
                    variations: []
                )
            ),
            .gridFit(.init(x: 0, y: 1)): .custom(
                .init(
                    design: .init(label: .text("abc"), color: .special),
                    press_actions: [.moveTab(.system(.user_english))],
                    longpress_actions: .none,
                    variations: [
                        .init(
                            type: .flick_variation(.right),
                            key: .init(
                                design: .init(label: .text("‚Üí")),
                                press_actions: [.moveCursor(1)],
                                longpress_actions: .init(repeat: [.moveCursor(1)])
                            )
                        )
                    ]
                )
            ),
            .gridFit(.init(x: 0, y: 2)): .custom(
                .init(
                    design: .init(label: .text("„ÅÇ„ÅÑ„ÅÜ"), color: .special),
                    press_actions: [.moveTab(.system(.user_japanese))],
                    longpress_actions: .none,
                    variations: []
                )
            ),
            .gridFit(.init(x: 0, y: 3)): .system(.change_keyboard),
            .gridFit(.init(x: 1, y: 0)): makeKey(main: "„ÅÇ", sub: ["„ÅÑ", "„ÅÜ", "„Åà", "„Åä"]),
            .gridFit(.init(x: 2, y: 0)): makeKey(main: "„Åã", sub: ["„Åç", "„Åè", "„Åë", "„Åì"]),
            .gridFit(.init(x: 3, y: 0)): makeKey(main: "„Åï", sub: ["„Åó", "„Åô", "„Åõ", "„Åù"]),
            .gridFit(.init(x: 1, y: 1)): makeKey(main: "„Åü", sub: ["„Å°", "„Å§", "„Å¶", "„Å®"]),
            .gridFit(.init(x: 2, y: 1)): makeKey(main: "„Å™", sub: ["„Å´", "„Å¨", "„Å≠", "„ÅÆ"]),
            .gridFit(.init(x: 3, y: 1)): makeKey(main: "„ÅØ", sub: ["„Å≤", "„Åµ", "„Å∏", "„Åª"]),
            .gridFit(.init(x: 1, y: 2)): makeKey(main: "„Åæ", sub: ["„Åø", "„ÇÄ", "„ÇÅ", "„ÇÇ"]),
            .gridFit(.init(x: 2, y: 2)): makeKey(main: "„ÇÑ", sub: ["„Äå", "„ÇÜ", "„Äç", "„Çà"]),
            .gridFit(.init(x: 3, y: 2)): makeKey(main: "„Çâ", sub: ["„Çä", "„Çã", "„Çå", "„Çç"]),
            .gridFit(.init(x: 1, y: 3)): .system(.flick_kogaki),
            .gridFit(.init(x: 2, y: 3)): makeKey(main: "„Çè", sub: ["„Çí", "„Çì", "„Éº", ""]),
            .gridFit(.init(x: 3, y: 3)): makeKey(main: "„ÄÅ", sub: ["„ÄÇ", "ÔºÅ", "Ôºü", ""]),
            .gridFit(.init(x: 4, y: 0)): .custom(
                .init(
                    design: .init(label: .system_image("bold"), color: .special),
                    press_actions: [.input("****"), .moveCursor(-2)],
                    longpress_actions: .none,
                    variations: [
                        .init(
                            type: .flick_variation(.left),
                            key: .init(
                                design: .init(label: .system_image("italic")),
                                press_actions: [.input("**"), .moveCursor(-1)],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.top),
                            key: .init(
                                design: .init(label: .system_image("strikethrough")),
                                press_actions: [.input("~~~~"), .moveCursor(-2)],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.right),
                            key: .init(
                                design: .init(label: .text("‚àöœÄ")),
                                press_actions: [.input("$$"), .moveCursor(-1)],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.bottom),
                            key: .init(
                                design: .init(label: .text("ùöñùöòùöóùöò")),
                                press_actions: [.input("``"), .moveCursor(-1)],
                                longpress_actions: .none
                            )
                        ),
                    ]
                )
            ),
            .gridFit(.init(x: 4, y: 1)): .custom(
                .init(
                    design: .init(label: .system_image("link"), color: .special),
                    press_actions: [.input("[]()"), .moveCursor(-3)],
                    longpress_actions: .none,
                    variations: [
                        .init(
                            type: .flick_variation(.left),
                            key: .init(
                                design: .init(label: .text("*")),
                                press_actions: [.input("*")],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.top),
                            key: .init(
                                design: .init(label: .text(".")),
                                press_actions: [.input(".")],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.right),
                            key: .init(
                                design: .init(label: .text("-")),
                                press_actions: [.input("-")],
                                longpress_actions: .none
                            )
                        ),
                    ]
                )
            ),
            .gridFit(.init(x: 4, y: 2)): .custom(
                .init(
                    design: .init(label: .text("Ë¶ãÂá∫„Åó"), color: .special),
                    press_actions: [.input("# ")],
                    longpress_actions: .none,
                    variations: [
                        .init(
                            type: .flick_variation(.left),
                            key: .init(
                                design: .init(label: .text("Ë¶ãÂá∫„Åó2")),
                                press_actions: [.input("## ")],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.top),
                            key: .init(
                                design: .init(label: .text("Ë¶ãÂá∫„Åó3")),
                                press_actions: [.input("### ")],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.right),
                            key: .init(
                                design: .init(label: .text("Ë¶ãÂá∫„Åó4")),
                                press_actions: [.input("#### ")],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.bottom),
                            key: .init(
                                design: .init(label: .text("Ë¶ãÂá∫„Åó5")),
                                press_actions: [.input("##### ")],
                                longpress_actions: .none
                            )
                        ),

                    ]
                )
            ),
            .gridFit(.init(x: 4, y: 3)): .custom(
                .init(
                    design: .init(label: .text("```"), color: .special),
                    press_actions: [.input("```\n\n```"), .moveCursor(-5)],
                    longpress_actions: .none,
                    variations: []
                )
            ),
            .gridFit(.init(x: 5, y: 0)): .custom(
                .init(
                    design: .init(label: .system_image("delete.left"), color: .special),
                    press_actions: [.delete(1)],
                    longpress_actions: .init(repeat: [.delete(1)]),
                    variations: [
                        .init(
                            type: .flick_variation(.left),
                            key: .init(
                                design: .init(label: .system_image("xmark")),
                                press_actions: [.smartDeleteDefault],
                                longpress_actions: .none
                            )
                        ),
                        .init(
                            type: .flick_variation(.bottom),
                            key: .init(
                                design: .init(label: .system_image("delete.right")),
                                press_actions: [.delete(-1)],
                                longpress_actions: .init(repeat: [.moveCursor(-1)])
                            )
                        )
                    ]
                )
            ),
            .gridFit(.init(x: 5, y: 1)): .custom(
                .init(
                    design: .init(label: .text("Á©∫ÁôΩ"), color: .special),
                    press_actions: [.input(" ")],
                    longpress_actions: .init(start: [.toggleCursorBar]),
                    variations: [
                        .init(
                            type: .flick_variation(.left),
                            key: .init(
                                design: .init(label: .text("‚Üê")),
                                press_actions: [.moveCursor(-1)],
                                longpress_actions: .init(repeat: [.moveCursor(-1)])
                            )
                        ),
                        .init(
                            type: .flick_variation(.top),
                            key: .init(
                                design: .init(label: .text("\t")),
                                press_actions: [.moveCursor(-1)],
                                longpress_actions: .none
                            )
                        )
                    ]
                )
            ),
            .gridFit(.init(x: 5, y: 2)): .custom(
                .init(
                    design: .init(label: .system_image("list.bullet"), color: .special),
                    press_actions: [.toggleTabBar],
                    longpress_actions: .none,
                    variations: []
                )
            ),
            .gridFit(.init(x: 5, y: 2, width: 1, height: 2)): .system(.enter),
        ]
    )
)
do {
    try md_custard.write(to: URL(fileURLWithPath: "../results/md_keyboard.json"))
} catch {
    print(error.localizedDescription)
}
